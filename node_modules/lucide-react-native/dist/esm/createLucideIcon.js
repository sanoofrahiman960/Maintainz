/**
 * lucide-react-native v0.252.0 - ISC
 */

import { forwardRef, createElement } from 'react';
import PropTypes from 'prop-types';
import * as NativeSvg from 'react-native-svg';
import defaultAttributes from './defaultAttributes.js';

const createLucideIcon = (iconName, iconNode) => {
  const Component = forwardRef(
    ({ color = "currentColor", size = 24, strokeWidth = 2, absoluteStrokeWidth, children, ...rest }, ref) => createElement(
      NativeSvg.Svg,
      {
        ref,
        ...defaultAttributes,
        width: size,
        height: size,
        stroke: color,
        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,
        ...rest
      },
      [
        ...iconNode.map(([tag, attrs]) => {
          const upperCasedTag = tag.charAt(0).toUpperCase() + tag.slice(1);
          return createElement(NativeSvg[upperCasedTag], attrs);
        }),
        ...(Array.isArray(children) ? children : [children]) || []
      ]
    )
  );
  Component.propTypes = {
    color: PropTypes.string,
    size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
  };
  Component.displayName = `${iconName}`;
  return Component;
};

export { createLucideIcon as default };
//# sourceMappingURL=createLucideIcon.js.map
